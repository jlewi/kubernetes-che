
---
# Retrieves and updates TLS certificates from LetsEncrypt.org (ACME provider).
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-lego
spec:
  revisionHistoryLimit: 3
  replicas: 1
  template:
    metadata:
      labels:
        name: kube-lego
        # Required for auto-created kube-lego-nginx service to work.
        app: kube-lego
    spec:
      containers:
        - name: kube-lego
          image: jetstack/kube-lego:0.1.2
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: LEGO_EMAIL
              value: jlewi@google.com
            - name: LEGO_URL
              # Use Let's Encrypt production API URL (instead of default staging environment):
              value: "https://acme-v01.api.letsencrypt.org/directory"
            - name: LEGO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LEGO_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 5m
              memory: "10Mi"
            limits:
              cpu: 50m
              memory: "100Mi"
---
# Default web server if no Ingress rule applies.
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    name: default-http-backend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
spec:
  revisionHistoryLimit: 3
  replicas: 1
  template:
    metadata:
      labels:
        name: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: default-http-backend
          image: gcr.io/google_containers/defaultbackend:1.0
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
          volumeMounts:
            # Security hack, see https://github.com/kubernetes/kubernetes/issues/16779
            - name: no-service-account
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
      volumes:
        - name: no-service-account
          emptyDir: {}

